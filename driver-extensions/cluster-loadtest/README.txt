Cassandra-Mesos Cluster Loadtest
================================

The scripted tool cluster-loadtest.sh is meant to add some load to a Cassandra-Mesos cluster to see whether
it works. It's not meant to get any valueable performance numbers. To get valid performance numbers,
add your own stress profile that matches your individual application.

The tool can take some optional arguments:

--limit N           Maximum number of Cassandra nodes that the cassandra-stress tool gets.
--duration N        The fixed duration of each stress run instead of the "normal" stderr based approach
                    of cassandra-stress.
                    Also see: tools/bin/cassandra-stress help user
--n N               The fixed number of operations performed during each stress run instead of the "normal"
                    stderr based approach of cassandra-stress.
                    Also see: tools/bin/cassandra-stress help user
--profile P         Use profile P instread of cqlstress-example.yaml
--ops OPS           Use the operations OPS instead of the default "insert=1,simple1=1" for cqlstress-example.yaml.
                    Also see: tools/bin/cassandra-stress help user
--logdir DIR        Use DIR instead of the default pattern that creates a directory with the current timestamp in
                    its name.
--no-default-ops    The default options are "-mode native cql3 -rate threads>=50" which means to use
                    Cassandra's native protocol with CQL and start with 50 threads. This command line options
                    clears the default options.

All other, following options given on the command line are just passed to cassandra-stress.


You should take a look into the main log file cluster-loadtest.log to follow the progress an possible error messages.
After cassandra-stress has finished, it collects information from all Cassandra nodes using the tool com-qa-report.


Any error reported in cluster-loadtest.log is a failure that should be solved.
If you see a permanent flow of lines in the log file with numbers of operations increasing, the stress tool is
working correctly.


After the test has finished, you should also take a look in to the files generated by com-qa-report.
Any error in the log files should be investigated.


All nodes should be live and running for an initial test.
You may also try to kill a Cassandra node during the test to see if and what happens.


Before you start with the test, you may want to run a 'com-nodetool status' to see whether all your Cassandra
nodes are up and in normal state.
